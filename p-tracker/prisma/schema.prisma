// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Asset {
    id           String  @id @default(cuid())
    name         String
    wkn          String?
    isin         String?
    currentprice Float?
}

model Position {
    id        String   @id @default(cuid())
    name      String
    wkn       String?
    isin      String?
    price     Float?
    quantity  Float?
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")

    owner   User?   @relation(fields: [ownerId], references: [id])
    ownerId String?

    transactions Transaction[]
}

model Transaction {
    id        String   @id @default(cuid())
    type      String?
    price     Float?
    quantity  Float?
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")

    owner   User?   @relation(fields: [ownerId], references: [id])
    ownerId String?

    position   Position? @relation(fields: [positionId], references: [id])
    positionId String?
}

model User {
    id           String        @id @default(cuid())
    name         String?
    email        String?       @unique
    createdAt    DateTime      @default(now()) @map(name: "created_at")
    updatedAt    DateTime      @updatedAt @map(name: "updated_at")
    positions    Position[]
    transactions Transaction[]

    @@map(name: "users")
}
